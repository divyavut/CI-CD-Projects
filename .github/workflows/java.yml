name: Java CI with Maven

# Trigger workflow on push to main branch or pull request to main branch
on:
  push:
    branches:
      - main  # You can also use 'master' if that's your branch name
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest  
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin' 
    - name: Build with Maven
      run: mvn clean package -f my-java-app/pom.xml
      
    - name: Run tests
      run: mvn test -f my-java-app/pom.xml
      
    - name: Upload artifact (JAR file)
      uses: actions/upload-artifact@v4
      with:
        name: my-java-app-jar
        path: my-java-app/target/*.jar
        
    - name: Deploy to AWS EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}      # The EC2 public IP address
        EC2_USER: ${{ secrets.EC2_USER }}      # The EC2 SSH username (e.g., ec2-user for Amazon Linux)
        EC2_KEY: ${{ secrets.EC2_PRIVATE_KEY }} # The private key to SSH into the EC2 instance
      run: |
        # Save the private key as a file
        echo "$EC2_KEY" > ec2_key.pem
        chmod 600 ec2_key.pem

        # Use SCP to copy the JAR file to the EC2 instance
        scp -i ec2_key.pem target/my-java-app-1.0-SNAPSHOT.jar $EC2_USER@$EC2_HOST:/home/$EC2_USER/

        # SSH into EC2 to run the JAR file
        ssh -i ec2_key.pem $EC2_USER@$EC2_HOST "java -jar /home/$EC2_USER/my-java-app-1.0-SNAPSHOT.jar"
